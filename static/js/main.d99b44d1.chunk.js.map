{"version":3,"sources":["actions/types.js","actions/logActions.js","components/Layout/Searchbar.js","components/logs/LogItem.js","components/Layout/Preloader.js","components/logs/Logs.js","components/Layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","required","placeholder","ref","onChange","e","current","value","htmlFor","LogItem","log","deleteLog","setCurrent","href","attention","onClick","message","tech","format","date","M","toast","html","prototype","PropTypes","object","isRequired","func","method","Preloader","state","getLogs","logs","loading","useEffect","length","map","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","console","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d99b44d1.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n} from \"./types\";\r\n\r\n//get logs from server\r\n\r\n// export const getLogs = () =>{\r\n//     return async dispatch => {\r\n//         setLoading();\r\n\r\n//         const res = await fetch('/logs');\r\n//         const data = await res.json();\r\n\r\n//         dispatch({\r\n//             type: 'GET_LOGS',\r\n//             payload: data\r\n//         });\r\n//     };\r\n// };\r\n\r\n//Get logs from Server\r\nexport const getLogs = () => async (dispatch) => {\r\n  //  return async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = (log) => async (dispatch) => {\r\n  //  return async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n//Delete logs from server\r\n\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n    //  return async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs/${id}`, {\r\n          method:'DELETE'\r\n      });\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: DELETE_LOG,\r\n        payload: id,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n// Update log on server\r\nexport const updateLog = log => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs/${log.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(log),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n  \r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: UPDATE_LOG,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n\r\n  //Search Logs on Server\r\n\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n    //  return async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs?q=${text}`);\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: SEARCH_LOGS,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({ \r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Set Current log\r\n  export const setCurrent = log =>{\r\n      return {\r\n          type: SET_CURRENT,\r\n          payload: log\r\n      }\r\n  }\r\n\r\n\r\n  \r\n  // Clear Current log\r\n  export const clearCurrent = () =>{\r\n    return {\r\n        type: CLEAR_CURRENT\r\n    }\r\n}\r\n//set Loading to true\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchLogs } from '../../actions/logActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Searchbar = ({ searchLogs }) => {\r\n    const text = useRef('');\r\n\r\n    const onChange = e => {\r\n        searchLogs(text.current.value);\r\n    }\r\n    return (\r\n        <nav style={{ marginBottom: '30px' }} className='blue'>\r\n            <div className=\"nav-wrapper\">\r\n                <form>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"search\" type=\"search\" required\r\n                        placeholder='Search Logs...' ref={text} onChange={onChange}/>\r\n                        <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                        <i className=\"material-icons\">close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n  </nav>\r\n    );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n    searchLogs: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, { searchLogs })(Searchbar);","import React from 'react'\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n    const onDelete = () =>{\r\n        deleteLog(log.id);\r\n        M.toast({ html: \"Log Deleted!!!\" })\r\n    }\r\n\r\n    return (\r\n        <li className='collection-item'>\r\n            <div>\r\n                <a href='#edit-log-modal' className={`modal-trigger ${\r\n                    log.attention ? 'red-text' : 'blue-text'}`}\r\n                    onClick={() => setCurrent(log)}\r\n                    >\r\n                    {log.message}\r\n                    </a>\r\n                    <br/>\r\n                    <span className='grey-text'>\r\n                        <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n                        <span className='black-text'>{log.tech}</span> on \r\n                        <Moment format = 'MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n                        <a href='#/' onClick={onDelete} className='secondary-content'>\r\n                            <i className='material-icons grey-text'>delete</i>\r\n                        </a>\r\n                    </span>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nLogItem.prototype = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired,\r\n}\r\nexport default connect(null, {deleteLog, setCurrent})(LogItem);","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='progress blue lighten-4'>\r\n            <div className='indeterminate blue'></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../Layout/Preloader';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading } , getLogs }) => {\r\n    \r\n    useEffect(() =>{\r\n        getLogs();\r\n        //es-lint disabled next-line\r\n    },[]);\r\n\r\n    if(loading || logs === null){\r\n        return <Preloader/>}\r\n    return (\r\n        <ul className='collection with-header'>\r\n          <li className='collection-header'>\r\n            <h4 className='center'>System Logs</h4>\r\n          </li>\r\n          {!loading && logs.length === 0 ? (\r\n            <p className='center'>No logs to show...</p>\r\n          ) : (\r\n            logs.map(log => <LogItem log={log} key ={log.id}/>)\r\n          )}\r\n        </ul>\r\n      );\r\n    };\r\n    \r\n    // Logs.propTypes = {\r\n    //   log: PropTypes.object.isRequired,\r\n    //   getLogs: PropTypes.func.isRequired\r\n    // };\r\n\r\n    Logs.propTypes = {\r\n      log: PropTypes.object.isRequired,\r\n      getLogs: PropTypes.func.isRequired\r\n    }\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n})\r\nexport default connect(mapStateToProps, {getLogs})(Logs);","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from \"./types\";\r\n\r\n//Get Techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  //  return async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Tech from server\r\n\r\nexport const deleteTech = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/techs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n//Set Loading to true\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechSelectOptions);","import React, { useState } from \"react\";\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport {connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n  \r\n  const onSubmit = () =>{\r\n      if(message === '' || tech === ''){\r\n        M.toast({ html: 'Please enter a message and tech'})\r\n      }\r\n      else{\r\n          const newLog = {\r\n            message,\r\n            attention,\r\n            tech,\r\n            date: new Date()\r\n          } \r\n\r\n          addLog(newLog);\r\n          \r\n          M.toast({ html: `Log added by ${tech}` })\r\n\r\n          //clearFields \r\n           setMessage('');\r\n           setTech('');\r\n           setAttention()\r\n      }\r\n  }\r\n  return (\r\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  value={attention}\r\n                  checked={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes={\r\n  addLog: PropTypes.func.isRequired,\r\n}\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport {connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateLog } from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n  \r\n  useEffect(()=> {\r\n    if(current){\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);  \r\n    }\r\n  }, [current])\r\n  const onSubmit = () =>{\r\n      if(message === '' || tech === ''){\r\n        M.toast({ html: 'Please enter a message and tech'})\r\n      }\r\n      else{\r\n          console.log(message, attention, tech);\r\n           \r\n          const updLog = {\r\n            id: current.id,\r\n            message,\r\n            attention,\r\n            tech,\r\n            date: new Date()\r\n          };\r\n    \r\n          updateLog(updLog);\r\n          M.toast({ html: `Log updated by ${tech}` });\r\n          //clearFields \r\n           setMessage('');\r\n           setTech('');\r\n           setAttention();\r\n        }\r\n\r\n  }\r\n  return (\r\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            {current === null ? <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label> : ''}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tech\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  value={attention}\r\n                  checked={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n  current : state.log.current\r\n})\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName\r\n      });\r\n\r\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n      // Clear Fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired,\r\n}\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTech }\r\n)(TechItem);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechListModal);","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n  \r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return{\r\n        ...state,\r\n        logs:state.logs.filter(log => log.id !== action.payload),\r\n        loading: false\r\n      }\r\n    case UPDATE_LOG:\r\n      return{\r\n        ...state,\r\n        logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\r\n      }\r\n     case SEARCH_LOGS:\r\n       return{\r\n         ...state,\r\n         logs: action.payload\r\n       } \r\n    case  SET_CURRENT:\r\n      return{\r\n        ...state,\r\n        current: action.payload\r\n      } \r\n    case CLEAR_CURRENT:\r\n    return{\r\n      ...state,\r\n      current: null\r\n    }  \r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR,\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    techs: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_TECHS:{\r\n          return {\r\n              ...state,\r\n              techs: action.payload,\r\n              loading: false\r\n          }\r\n      }\r\n      case ADD_TECH:{\r\n        return {\r\n          ...state,\r\n          techs: [...state.techs, action.payload],\r\n          loading: false\r\n        }\r\n      }\r\n      \r\n      case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter(tech => tech.id !== action.payload),\r\n        loading: false\r\n      };\r\n\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        }\r\n      case TECHS_ERROR:{\r\n        console.error(action.payload);\r\n        return{\r\n          ...state,\r\n          error: action.payload,\r\n          loading:false\r\n        }\r\n      }  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech : techReducer\r\n });","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React , { Fragment, useEffect}  from 'react';\nimport './App.css';\nimport Searchbar from './components/Layout/Searchbar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/Layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n\nconst App = () => {\n\n  useEffect(() => {\n    //Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n  <Provider store= {store}>\n  <Fragment>\n    <Searchbar/>\n    <div className='container'>\n      <AddBtn/>\n      <EditLogModal/>\n      <AddLogModal />\n      <AddTechModal/>\n      <TechListModal/>\n      <Logs />\n    </div>\n  </Fragment>\n  </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}